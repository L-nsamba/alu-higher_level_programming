The ``text_indentation`` module
=============================

Using ``text_indentation``
---------------------------

Import the function:
    >>> text_indentation = __import__('5-text_indentation').text_indentation

Test with basic text containing punctuation:
    >>> text_indentation("Hello. World?")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>

Test with text containing colon:
    >>> text_indentation("Question: Answer.")
    Question:
    <BLANKLINE>
    Answer.
    <BLANKLINE>

Test with spaces after punctuation:
    >>> text_indentation("Hello.   World?   Test:")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>
    Test:
    <BLANKLINE>

Test with tab after punctuation:
    >>> text_indentation("Hello.\tWorld")
    Hello.
    <BLANKLINE>
    World

Test with empty string:
    >>> text_indentation("")

Test with string containing only spaces:
    >>> text_indentation("   ")
       

Test with string without special characters:
    >>> text_indentation("Hello World")
    Hello World

Test with multiple punctuation marks:
    >>> text_indentation("One. Two? Three: Four.")
    One.
    <BLANKLINE>
    Two?
    <BLANKLINE>
    Three:
    <BLANKLINE>
    Four.
    <BLANKLINE>

Test with punctuation at the end:
    >>> text_indentation("End.")
    End.
    <BLANKLINE>

Test with punctuation at the beginning:
    >>> text_indentation(".Start")
    .
    <BLANKLINE>
    Start

Test with consecutive punctuation:
    >>> text_indentation("Test.?:")
    Test.
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>

Test with text containing newlines:
    >>> text_indentation("Line1.\nLine2?")
    Line1.
    <BLANKLINE>
    Line2?
    <BLANKLINE>

Test with non-string input (integer):
    >>> text_indentation(123)
    Traceback (most recent call last):
        ...
    TypeError: text must be a string

Test with non-string input (None):
    >>> text_indentation(None)
    Traceback (most recent call last):
        ...
    TypeError: text must be a string

Test with non-string input (list):
    >>> text_indentation([1, 2, 3])
    Traceback (most recent call last):
        ...
    TypeError: text must be a string

Test with only special characters:
    >>> text_indentation(".:?")
    .
    <BLANKLINE>
    :
    <BLANKLINE>
    ?
    <BLANKLINE>

Test with spaces and special characters:
    >>> text_indentation("   .   ?   :   ")
       .
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>

Test edge case - text ending with space after punctuation:
    >>> text_indentation("Hello. ")
    Hello.
    <BLANKLINE>

Test with mixed whitespace:
    >>> text_indentation("Test.\t \nNext")
    Test.
    <BLANKLINE>
    Next
